// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(MyStoreContext))]
    [Migration("20241030060152_intitial")]
    partial class intitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjects.AccountMember", b =>
                {
                    b.Property<string>("MemberID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("MemberPassword")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("MemberRole")
                        .HasColumnType("int");

                    b.HasKey("MemberID");

                    b.ToTable("AccountMembers");

                    b.HasData(
                        new
                        {
                            MemberID = "PS1001",
                            EmailAddress = "admin@newstore.com",
                            MemberName = "Admin User",
                            MemberPassword = "@admin01",
                            MemberRole = 1
                        },
                        new
                        {
                            MemberID = "PS1002",
                            EmailAddress = "john.staff@newstore.com",
                            MemberName = "John Staff",
                            MemberPassword = "@staff02",
                            MemberRole = 2
                        },
                        new
                        {
                            MemberID = "PS1003",
                            EmailAddress = "alice.member@newstore.com",
                            MemberName = "Alice Member",
                            MemberPassword = "@member03",
                            MemberRole = 3
                        },
                        new
                        {
                            MemberID = "PS1004",
                            EmailAddress = "bob.member@newstore.com",
                            MemberName = "Bob Member",
                            MemberPassword = "@member04",
                            MemberRole = 3
                        });
                });

            modelBuilder.Entity("BusinessObjects.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Snacks"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Bakery"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Frozen Foods"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Fresh Produce"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Meat"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Seafood"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Dairy"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryID = 1,
                            Price = 2.50m,
                            ProductName = "Potato Chips",
                            UnitsInStock = 50
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryID = 2,
                            Price = 3.00m,
                            ProductName = "Orange Juice",
                            UnitsInStock = 30
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryID = 3,
                            Price = 1.75m,
                            ProductName = "Croissant",
                            UnitsInStock = 15
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryID = 4,
                            Price = 5.00m,
                            ProductName = "Frozen Pizza",
                            UnitsInStock = 25
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryID = 5,
                            Price = 0.50m,
                            ProductName = "Bananas",
                            UnitsInStock = 40
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryID = 6,
                            Price = 6.50m,
                            ProductName = "Chicken Breast",
                            UnitsInStock = 20
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryID = 7,
                            Price = 9.00m,
                            ProductName = "Salmon Fillet",
                            UnitsInStock = 15
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryID = 8,
                            Price = 1.00m,
                            ProductName = "Greek Yogurt",
                            UnitsInStock = 35
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryID = 3,
                            Price = 1.25m,
                            ProductName = "Bagel",
                            UnitsInStock = 20
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryID = 2,
                            Price = 2.00m,
                            ProductName = "Lemonade",
                            UnitsInStock = 25
                        });
                });

            modelBuilder.Entity("BusinessObjects.Product", b =>
                {
                    b.HasOne("BusinessObjects.Category", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("BusinessObjects.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
